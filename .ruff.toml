fix = true
unsafe-fixes = true
preview = true
target-version = "py310"
src = ["src"]

[lint]
future-annotations = true
task-tags = ["TODO"]
ignore = [
    # Shadowing a Python builtin module.
    "A005",
    # Dynamically typed expressions (typing.Any) are disallowed.
    "ANN401",
    # Checks for undocumented magic method definitions.
    "D105",
    # Missing argument description in the docstring.
    "D417",
    # Conflicts with ruff format.
    "E203",
    # Avoid unexpected behavior with the formatter.
    "ISC001",
    # Too many arguments in function definition.
    "PLR0913",
    # `subprocess.run` without explicit `check` argument.
    "PLR2004",
    # Too many public methods.
    "PLR0904",
    # Too many branches.
    "PLR0912",
    # Too many statements.
    "PLR0915",
    # Too many return statements.
    "PLR0911",
    # `for` loop variable `name` overwritten by assignment target.
    "PLW1510",
    # Magic value used in comparison.
    "PLW2901",
    # Bad or misspelled dunder method name `_repr_html_`.
    "PLW3201",
    # Object does not implement `__hash__` method.
    "PLW1641",
    # Checks for noqa directives that are no longer applicable.
    "RUF100",
    # Checks for long exception messages that are not defined in the exception class itself.
    "TRY003",
]

select = [
    "A",
#    "ANN",
    "ASYNC",
    "B",
    "BLE",
#    "C",
    "C4",
    "D",
#    "DOC",
    "E",
    "EM",
    "F",
#    "FA",
#    "FBT",
    "FLY",
    "FURB",
    "G",
    "I",
    "ISC",
    "INP",
    "LOG",
    "Q",
    "N",
    "NPY",
#    "PL",
#    "PD",
    "PT",
    "PIE",
    "PGH",
    "PTH",
    "PYI",
    "PERF",
    "RET",
    "RSE",
    "RUF",
#    "S",
    "SIM",
#    "SLF",
    "SLOT",
    "T",
    "T10",
    "T20",
    "TCH",
    "TRY",
    "W",
    "UP",
    "YTT",
]

[lint.flake8-type-checking]
runtime-evaluated-base-classes = [
    "pydantic.BaseModel",
    "pydantic_settings.BaseSettings",
    "gemseo.algos.doe.base_doe_settings.BaseDOESettings",
    "gemseo.settings.base_settings.BaseSettings",
    "gemseo.algos.linear_solvers.base_linear_solver_settings.BaseLinearSolverSettings",
    "gemseo.algos.opt.base_optimizer_settings.BaseOptimizerSettings",
    "gemseo.algos.opt.nlopt.settings.base_nlopt_settings.BaseNLoptSettings",
    "gemseo.algos.opt.nlopt.settings.base_gradient_free_nlopt_settings.BaseGradientFreeNLoptSettings",
    "gemseo.mlearning.classification.algos.base_classifier_settings.BaseClassifierSettings",
    "gemseo.algos.base_driver_settings.BaseDriverSettings",
    "gemseo.mda.base_mda_solver_settings.BaseMDASolverSettings",
    "gemseo.mlearning.core.algos.unsupervised_settings.BaseMLUnsupervisedAlgoSettings",
    "gemseo.mlearning.regression.algos.base_regressor_settings.BaseRegressorSettings",
    "gemseo.mlearning.regression.algos.linreg_settings.LinearRegressor_Settings",
    "gemseo.post.base_post_settings.BasePostSettings",
    "gemseo.uncertainty.distributions.base_distribution_settings.BaseDistribution_Settings",
    "gemseo.uncertainty.distributions.base_settings.weibull_settings.BaseWeibullDistribution_Settings",
    "gemseo.algos.doe.pydoe.settings.base_pydoe_settings.BasePyDOESettings",
    "gemseo.algos.doe.openturns.settings.base_openturns_settings.BaseOpenTURNSSettings",
    "gemseo.algos.doe.scipy.settings.base_scipy_doe_settings.BaseSciPyDOESettings",
    "gemseo.algos.opt.scipy_global.settings.base_scipy_global_settings.BaseSciPyGlobalSettings",
    "gemseo.formulations.base_formulation_settings.BaseFormulationSettings",
    "gemseo.mlearning.linear_model_fitting.base_linear_model_fitter_settings.BaseLinearModelFitter_Settings",
    "gemseo.mlearning.regression.algos.base_fce_settings.BaseFCERegressor_Settings",
    "gemseo.algos.opt.base_milp_settings.BaseMILPSettings",
    "gemseo.algos.opt.base_gradient_based_algorithm_settings.BaseGradientBasedAlgorithmSettings",
    "gemseo.algos.opt.scipy_milp.settings.scipy_milp_settings.SciPyMILP_Settings",
    "gemseo_umdo.formulations.sampling_settings.Sampling_Settings",
    "gemseo_umdo.formulations.base_sampling_settings.BaseSamplingSettings",
    "gemseo_umdo.formulations.base_umdo_formulation_settings.BaseUMDOFormulationSettings",
    "gemseo_umdo.formulations.base_surrogate_settings.BaseSurrogateWithMCStatistics_Settings",
    "gemseo_umdo.formulations.base_surrogate_settings.SurrogateQuality_Settings",
    "gemseo_umdo.formulations.base_surrogate_settings.SurrogateQuality_Settings",
    "gemseo_umdo.formulations.control_variate_settings.ControlVariate_Settings",
    "gemseo_umdo.formulations.base_surrogate_settings.BaseSurrogate_Settings",
    "gemseo_umdo.formulations.surrogate_settings.Surrogate_Settings",
]

[lint.isort]
force-single-line = true
#required-imports = ["from __future__ import annotations"]

[lint.pydocstyle]
convention = "google"

[lint.per-file-ignores]
"*.ipynb" = ["RET504"]
"tests/*.py" = ["D", "PT009", "PT011", "PT027", "PTH"]
"docs/*.py" = [
  "T",
  "D",
  "B018",
  "PTH",
  "E501",
  "PERF",
  "A001",
  "RET504",
  "INP001",
]

[format]
docstring-code-format = true
docstring-code-line-length = 75
