include:
  - remote: "https://gitlab.com/gemseo/dev/ci-includes/-/raw/py311/plugin.yml"

pages:
  stage: publish
  dependencies: []
  image: $TEST_DOCKER_IMAGE
  variables:
    PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip
    MIKE_BRANCH: docs-site
  cache:
    paths:
      - $PIP_CACHE_DIR
    key:
      files:
        - requirements/doc.txt
      prefix: $TEST_DOCKER_IMAGE
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        MIKE_ARGS: $CI_COMMIT_REF_NAME
      changes:
        - src/**/*.*
        - docs/**/*.*
        - requirements/doc.txt
        - .gitlab-ci.yml
        - mkdocs.yml
    - if: $CI_COMMIT_TAG
      variables:
        MIKE_ARGS: --update-aliases $CI_COMMIT_TAG latest
  before_script:
    - !reference [.bash-functions]
  script:
    - $TOX_EXE -e doc --notest
    - . .tox/doc/bin/activate
    # By default gitlab does not fetch all branches,
    # this could fail when $MIKE_BRANCH is not yet existing
    # but mike will create it.
    - git fetch origin $MIKE_BRANCH --depth=1 || true
    - config_git_push
    - mike deploy --branch $MIKE_BRANCH --push $MIKE_ARGS
    - |
      # When there is no doc yet, redirect to the docs of the develop branch.
      if [[ $(mike list --remote origin --branch $MIKE_BRANCH) == $CI_DEFAULT_BRANCH ]]; then
        mike set-default --branch $MIKE_BRANCH --push $CI_DEFAULT_BRANCH;
      fi
    - |
      # For release versions, redirect to them.
      if [[ -n $CI_COMMIT_TAG ]]; then
        mike set-default --branch $MIKE_BRANCH --push latest;
      fi
    - git checkout $MIKE_BRANCH
  artifacts:
    paths:
      - public
